name: Deploy to EKS

on:
  push:
    branches: [ "main" ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      IMAGE_TAG: ${{ github.sha }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Build, tag, and push image to ECR
      run: |
        ECR_URI=$(aws ecr describe-repositories --repository-names ${{ secrets.ECR_REPOSITORY }} --query 'repositories[0].repositoryUri' --output text)
        docker build -t $ECR_URI:$IMAGE_TAG .
        docker push $ECR_URI:$IMAGE_TAG
        echo "ECR_IMAGE=$ECR_URI:$IMAGE_TAG" >> $GITHUB_ENV

    - name: Setup kubectl
      uses: azure/setup-kubectl@v3

    - name: Update kubeconfig
      run: |
        aws eks update-kubeconfig --name ${{ secrets.CLUSTER_NAME }} --region ${{ secrets.AWS_REGION }}

    - name: Deploy to EKS
      run: |
        sed "s|<ECR_IMAGE_URI>|${{ env.ECR_IMAGE }}|g" deployment.yaml > deployment-final.yaml
        kubectl apply -f deployment-final.yaml
        kubectl apply -f service.yaml
